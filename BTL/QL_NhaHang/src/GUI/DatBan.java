/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ql_nhahang;

import DAO.HoaDon_DAO;
import DAO.KhachHang_DAO;
import DAO.NhaHang_DAO;
import DTO.Ban;
import DTO.HoaDon;
import DTO.KhachHang;
import DTO.dtoStatic;
import GUI.Main_QL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author tphan
 */
public class DatBan extends javax.swing.JFrame {

    /**
     * Creates new form DatBan
     */
    NhaHang_DAO daoNH = new NhaHang_DAO();
    KhachHang_DAO daoKH = new KhachHang_DAO();
    HoaDon_DAO daoHD = new HoaDon_DAO();
    
    StringBuilder sb = null;
    int flag = 0;
    String maHD = null;
    Vector<Ban> vtLstBan = new Vector<>();
    
    public DatBan() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        loadCboBan();
    }
    
    private void loadCboBan()
    {
        cboBan.removeAllItems();
        int index = 0;
        try {
            ResultSet resultSet = daoNH.selectData("SELECT * FROM BAN WHERE TINHTRANG = N'Trống'");
            while(resultSet.next())
            {
                String key = resultSet.getString("MABAN");
                String name = resultSet.getString("TENBAN");
                int quantity = resultSet.getInt("SOGHE");
                String status = resultSet.getString("TINHTRANG");
                cboBan.addItem(new Ban(key, name, quantity, status));
                if(key.equals(dtoStatic.tableKey))
                    cboBan.setSelectedIndex(index);
                index++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(DatBan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private String createMaHD()
    {
        String key = "";
        try {
            ResultSet resultSet = daoNH.selectData("SELECT COUNT(*) SLHD FROM HOADON");
            if(resultSet.next())
            {
                int count = resultSet.getInt("SLHD");
                key = "HD" + String.format("%05d", count + 1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(DatBan.class.getName()).log(Level.SEVERE, null, ex);
        }
        return key;
    }
    
    private void loadLstBan(String maHD)
    {
        vtLstBan.removeAllElements();
        try {
            ResultSet rs = daoNH.selectData("SELECT BAN.MABAN, TENBAN, SOGHE, TINHTRANG FROM CTHD_BAN, BAN " +
                                            "WHERE CTHD_BAN.MABAN = BAN.MABAN AND MAHD = '" + maHD + "'");
            while (rs.next())
            {
                String key = rs.getString("MABAN");
                String name = rs.getString("TENBAN");
                vtLstBan.addElement(new Ban(key, name));
            }
            
            lstBan.setListData(vtLstBan);
        } catch (SQLException ex) {
            Logger.getLogger(DatBan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void checkDataForInsertKH() {
        if(txtMaKH.getText().isEmpty())
            sb.append("Mã khách hàng không thể để trống\n");
        
        if(txtTenKH.getText().isEmpty())
            sb.append("Tên khách hàng không thể để trống\n");
        
        if(txtPhone.getText().isEmpty())
            sb.append("Số điện thoại không thể để trống\n");
    }

    private boolean checkMaKH(String maKH) {
        try {
            ResultSet rs = daoNH.selectData("SELECT * FROM KHACHHANG WHERE MAKH = '" + maKH + "'");
            if (rs.next()) {
                return true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(DatBan.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return false;
    }

    private void checkDataForSearch(String phone) {
        if(phone.length() != 10)
        {
            if(phone.isEmpty())
                sb.append("Chưa nhập số điện thoại của khách hàng");
            else
                sb.append("Số điện thoại không hợp lệ");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlPhiuDatBan = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pnlThongTinKhachDat = new javax.swing.JPanel();
        lblMaKhachDatBan = new javax.swing.JLabel();
        lblTenKhachDatBan = new javax.swing.JLabel();
        lblSDTKhachDatBan = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        txtTenKH = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnCreateKey = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        pnlChonBan = new javax.swing.JPanel();
        pnlBanDaChon = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstBan = new javax.swing.JList();
        lblBan = new javax.swing.JLabel();
        cboBan = new javax.swing.JComboBox();
        lblSoGhe = new javax.swing.JLabel();
        lblTinhTrang = new javax.swing.JLabel();
        txtTinhTrang = new javax.swing.JTextField();
        txtSoGhe = new javax.swing.JTextField();
        btnChonBan = new javax.swing.JButton();
        btnDatBan = new javax.swing.JButton();
        btnXoaBan = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pnlPhiuDatBan.setBackground(new java.awt.Color(255, 234, 238));
        pnlPhiuDatBan.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("Phiếu Đặt Bàn");

        pnlThongTinKhachDat.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin khách hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        lblMaKhachDatBan.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblMaKhachDatBan.setText("Mã khách hàng:");

        lblTenKhachDatBan.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTenKhachDatBan.setText("Tên khách hàng:");

        lblSDTKhachDatBan.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblSDTKhachDatBan.setText("Số điện thoại:");

        txtMaKH.setEditable(false);
        txtMaKH.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        txtTenKH.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        txtPhone.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPhoneKeyPressed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSearch.setText("Tìm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnCreateKey.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCreateKey.setText("Tạo");
        btnCreateKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateKeyActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnSave.setText("Lưu");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlThongTinKhachDatLayout = new javax.swing.GroupLayout(pnlThongTinKhachDat);
        pnlThongTinKhachDat.setLayout(pnlThongTinKhachDatLayout);
        pnlThongTinKhachDatLayout.setHorizontalGroup(
            pnlThongTinKhachDatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinKhachDatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlThongTinKhachDatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlThongTinKhachDatLayout.createSequentialGroup()
                        .addGroup(pnlThongTinKhachDatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMaKhachDatBan)
                            .addComponent(lblTenKhachDatBan))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlThongTinKhachDatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlThongTinKhachDatLayout.createSequentialGroup()
                                .addComponent(txtMaKH)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCreateKey, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlThongTinKhachDatLayout.createSequentialGroup()
                                .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(pnlThongTinKhachDatLayout.createSequentialGroup()
                        .addComponent(lblSDTKhachDatBan, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(pnlThongTinKhachDatLayout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlThongTinKhachDatLayout.setVerticalGroup(
            pnlThongTinKhachDatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinKhachDatLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(pnlThongTinKhachDatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaKhachDatBan)
                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreateKey, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(pnlThongTinKhachDatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTenKhachDatBan)
                    .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(pnlThongTinKhachDatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSDTKhachDatBan))
                .addGap(30, 30, 30)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pnlChonBan.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chọn bàn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        pnlBanDaChon.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bàn đã chọn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        lstBan.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jScrollPane1.setViewportView(lstBan);

        javax.swing.GroupLayout pnlBanDaChonLayout = new javax.swing.GroupLayout(pnlBanDaChon);
        pnlBanDaChon.setLayout(pnlBanDaChonLayout);
        pnlBanDaChonLayout.setHorizontalGroup(
            pnlBanDaChonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBanDaChonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlBanDaChonLayout.setVerticalGroup(
            pnlBanDaChonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBanDaChonLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );

        lblBan.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblBan.setText("Bàn:");

        cboBan.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cboBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboBanActionPerformed(evt);
            }
        });

        lblSoGhe.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblSoGhe.setText("Số ghế:");

        lblTinhTrang.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTinhTrang.setText("Tình trạng:");

        txtTinhTrang.setEditable(false);
        txtTinhTrang.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        txtSoGhe.setEditable(false);
        txtSoGhe.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        btnChonBan.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnChonBan.setText("Chọn");
        btnChonBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonBanActionPerformed(evt);
            }
        });

        btnDatBan.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnDatBan.setText("Đặt");
        btnDatBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDatBanActionPerformed(evt);
            }
        });

        btnXoaBan.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnXoaBan.setText("Xóa");
        btnXoaBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaBanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlChonBanLayout = new javax.swing.GroupLayout(pnlChonBan);
        pnlChonBan.setLayout(pnlChonBanLayout);
        pnlChonBanLayout.setHorizontalGroup(
            pnlChonBanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChonBanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlChonBanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlChonBanLayout.createSequentialGroup()
                        .addGroup(pnlChonBanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSoGhe)
                            .addComponent(lblBan))
                        .addGap(38, 38, 38)
                        .addGroup(pnlChonBanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboBan, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSoGhe, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlChonBanLayout.createSequentialGroup()
                        .addComponent(lblTinhTrang)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnChonBan, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(pnlChonBanLayout.createSequentialGroup()
                .addComponent(pnlBanDaChon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlChonBanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnXoaBan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDatBan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(9, 9, 9))
        );
        pnlChonBanLayout.setVerticalGroup(
            pnlChonBanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlChonBanLayout.createSequentialGroup()
                .addGroup(pnlChonBanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlChonBanLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnXoaBan, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDatBan, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlChonBanLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(pnlChonBanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBan)
                            .addComponent(cboBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlChonBanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSoGhe)
                            .addComponent(txtSoGhe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlChonBanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTinhTrang)
                            .addComponent(txtTinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnChonBan, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(pnlBanDaChon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlPhiuDatBanLayout = new javax.swing.GroupLayout(pnlPhiuDatBan);
        pnlPhiuDatBan.setLayout(pnlPhiuDatBanLayout);
        pnlPhiuDatBanLayout.setHorizontalGroup(
            pnlPhiuDatBanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPhiuDatBanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlThongTinKhachDat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlChonBan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPhiuDatBanLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(301, 301, 301))
        );
        pnlPhiuDatBanLayout.setVerticalGroup(
            pnlPhiuDatBanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPhiuDatBanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPhiuDatBanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlThongTinKhachDat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlChonBan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPhiuDatBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(7, Short.MAX_VALUE)
                .addComponent(pnlPhiuDatBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Main_QL frm = new Main_QL();
        frm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void cboBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboBanActionPerformed
        Ban b = (Ban) cboBan.getSelectedItem();
        if(b != null)
        {
            txtSoGhe.setText(String.valueOf(b.getSoGhe()));
            txtTinhTrang.setText(b.getTinhTrang());
        }
    }//GEN-LAST:event_cboBanActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String phone = txtPhone.getText();
        sb = new StringBuilder();
        
        checkDataForSearch(phone);
        
        if(sb.length() > 0)
        {
            JOptionPane.showMessageDialog(rootPane, sb, "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            
            txtMaKH.setText("");
            txtTenKH.setText("");
            return;
        }
        
        try {
            ResultSet resultSet = daoKH.findKH(txtPhone.getText());
            if(resultSet.next())
            {
                txtMaKH.setText(resultSet.getString("MAKH"));
                txtTenKH.setText(resultSet.getString("TENKH"));
            }
            else
            {
                int result = JOptionPane.showConfirmDialog(rootPane, "Không có khách hàng nào. Bạn có muốn tạo mới ?", "Thông báo", JOptionPane.YES_NO_OPTION);
                if(result == JOptionPane.YES_OPTION)
                {
                    btnCreateKeyActionPerformed(evt);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(DatBan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnCreateKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateKeyActionPerformed
        try {
            ResultSet rs = daoNH.selectData("SELECT COUNT(*) AS SLKH FROM KHACHHANG");
            if(rs.next())
            {
                int count = rs.getInt("SLKH");
                txtMaKH.setText("KH" + String.format("%05d", count + 1));
                txtTenKH.setText("");
                txtPhone.setText("");
                txtTenKH.requestFocus();
            }
        } catch (SQLException ex) {
            Logger.getLogger(DatBan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCreateKeyActionPerformed

    private void btnChonBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonBanActionPerformed
        sb = new StringBuilder();
        
        checkDataForInsertKH();
        
        if(sb.length() > 0)
        {
            JOptionPane.showMessageDialog(rootPane, "Chưa có thông tin khách hàng", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Ban b = (Ban)cboBan.getSelectedItem();
        
        if(flag == 0)
        {
            maHD = createMaHD();
            flag = 1;
        }
        
        HoaDon hd = new HoaDon(maHD, dtoStatic.empKey, txtMaKH.getText());
        int result = daoHD.insertHD(hd, b.getMaBan());
        loadCboBan();
        loadLstBan(maHD);
    }//GEN-LAST:event_btnChonBanActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        sb = new StringBuilder();
        
        checkDataForInsertKH();
        
        if(sb.length() > 0)
        {
            JOptionPane.showMessageDialog(rootPane, sb, "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        KhachHang kh = new KhachHang(txtMaKH.getText(), txtTenKH.getText(), txtPhone.getText());
        if(checkMaKH(kh.getMaKH()))
        {
            int result = JOptionPane.showConfirmDialog(rootPane, "Thông tin khách hàng đã tồn tại. Bạn có muốn cập nhật không ?", "Thông báo", JOptionPane.YES_NO_OPTION);
            if(result == JOptionPane.YES_OPTION)
            {
                if(daoKH.updateKH(kh) == 0)
                    JOptionPane.showMessageDialog(rootPane, "Cập nhật thất bại", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                else
                    JOptionPane.showMessageDialog(rootPane, "Cập nhật thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else
        {
            if(daoKH.insertKH(kh) == 0)
                    JOptionPane.showMessageDialog(rootPane, "Lưu thất bại", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                else
                    JOptionPane.showMessageDialog(rootPane, "Lưu thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnXoaBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaBanActionPerformed
        if(!lstBan.getSelectedValuesList().isEmpty())
        {
            int result = JOptionPane.showConfirmDialog(rootPane, "Bạn chắc là muốn xóa ?", "Thông báo", JOptionPane.YES_NO_OPTION);
            if(result == JOptionPane.YES_OPTION)
            {
                List<Ban> lst = lstBan.getSelectedValuesList();
                for(Ban b : lst)
                    daoHD.deleteCTHD_Ban(maHD, b.getMaBan());
                loadCboBan();
                loadLstBan(maHD);
            }
        }
        else
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa chọn bàn cần xóa", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnXoaBanActionPerformed

    private void btnDatBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDatBanActionPerformed
        if(lstBan.getModel().getSize() > 0)
        {
            JOptionPane.showMessageDialog(rootPane, "Đặt bàn thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            Main_QL frm = new Main_QL();
            frm.setVisible(true);
            this.dispose();
        }
        else
            JOptionPane.showMessageDialog(rootPane, "Bạn cần phải chọn bàn trước", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnDatBanActionPerformed

    private void txtPhoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneKeyPressed
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || evt.getKeyChar() == '\b')
            txtPhone.setEditable(true);
        else 
        {
            txtPhone.setEditable(false);
            JOptionPane.showMessageDialog(rootPane, "Chỉ được nhập số", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            
            txtPhone.setEditable(true);
        }
    }//GEN-LAST:event_txtPhoneKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatBan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatBan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatBan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatBan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatBan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChonBan;
    private javax.swing.JButton btnCreateKey;
    private javax.swing.JButton btnDatBan;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnXoaBan;
    private javax.swing.JComboBox cboBan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBan;
    private javax.swing.JLabel lblMaKhachDatBan;
    private javax.swing.JLabel lblSDTKhachDatBan;
    private javax.swing.JLabel lblSoGhe;
    private javax.swing.JLabel lblTenKhachDatBan;
    private javax.swing.JLabel lblTinhTrang;
    private javax.swing.JList lstBan;
    private javax.swing.JPanel pnlBanDaChon;
    private javax.swing.JPanel pnlChonBan;
    private javax.swing.JPanel pnlPhiuDatBan;
    private javax.swing.JPanel pnlThongTinKhachDat;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtSoGhe;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtTinhTrang;
    // End of variables declaration//GEN-END:variables
}
