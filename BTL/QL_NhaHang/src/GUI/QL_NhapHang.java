/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ql_nhahang;

import DAO.NhaHang_DAO;
import DAO.PhieuNhap_DAO;
import DTO.MatHang;
import DTO.dtoStatic;
import GUI.Main_QL;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tphan
 */
public class QL_NhapHang extends javax.swing.JFrame {

    /**
     * Creates new form QL_NhapHang
     */
    
    NhaHang_DAO dao = new NhaHang_DAO();
    PhieuNhap_DAO daoPN = new PhieuNhap_DAO();
    
    DefaultTableModel dfTableModelMH = new DefaultTableModel();
    
    int flagCreate = 0, flagCreateKey = 0;
    
    public QL_NhapHang() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        loadCBoMatHang();
        
        initTableMH();
    }
    
    private String createMaPhieu()
    {
        String key = "";
        try {
            ResultSet resultSet = dao.selectData("SELECT COUNT(*) SLPN FROM PHIEUNHAPHANG");
            if(resultSet.next())
            {
                int count = resultSet.getInt("SLPN");
                key = "PN" + String.format("%05d", count + 1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(DatBan.class.getName()).log(Level.SEVERE, null, ex);
        }
        return key;
    }
    
    private void loadCBoMatHang()
    {
        cboMatHang.removeAllItems();
        
        try {
            ResultSet resultSet = dao.selectData("SELECT MAMH, TENMH, MANCC FROM MATHANG WHERE MADM = 'DM08' OR MADM = 'DM09' OR MADM = 'DM10'");
            while(resultSet.next())
            {
                String keyMH = resultSet.getString("MAMH");
                String name = resultSet.getString("TENMH");
                String maNCC = resultSet.getString("MANCC");
                
                cboMatHang.addItem(new MatHang(keyMH, name, maNCC));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main_QL.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void initTableMH()
    {
        String[] colTitle = {"Mã mặt hàng", "Tên mặt hàng", "Số lượng"};
        
        dfTableModelMH.setColumnIdentifiers(colTitle);
        tblDSMatHang.setModel(dfTableModelMH);
    }
    
    private void showMH(String maP)
    {
        dfTableModelMH.setRowCount(0);
        try {
            ResultSet rs = dao.selectData("SELECT MH.MAMH, TENMH, CT.SLUONG " +
                    "FROM MATHANG MH, CT_PHIEUNHAP CT " +
                    "WHERE MH.MAMH = CT.MAMH AND MAPHIEUNHAP = '" + maP + "'");
            while (rs.next())
            {
                String maMH = rs.getString("MAMH");
                String tenMH = rs.getString("TENMH");
                int sLuong = rs.getInt("SLUONG");
                
                dfTableModelMH.addRow(new String[]{maMH, tenMH, String.valueOf(sLuong)});
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main_QL.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDanhSachNhapHang = new javax.swing.JPanel();
        lblMaPhieu = new javax.swing.JLabel();
        txtMaPhieuNew = new javax.swing.JTextField();
        btnTaoMa = new javax.swing.JButton();
        lblMatHang = new javax.swing.JLabel();
        cboMatHang = new javax.swing.JComboBox();
        btnChonMH = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDSMatHang = new javax.swing.JTable();
        btnTaoPhieu = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblSLNhap = new javax.swing.JLabel();
        txtSLNhap = new javax.swing.JTextField();
        btnSuaSLuong = new javax.swing.JButton();
        lblNCC = new javax.swing.JLabel();
        txtNCC = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Phiếu nhập hàng");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pnlDanhSachNhapHang.setBackground(new java.awt.Color(255, 234, 238));
        pnlDanhSachNhapHang.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tạo Phiếu Nhập Hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        lblMaPhieu.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblMaPhieu.setText("Mã phiếu :");

        txtMaPhieuNew.setEditable(false);
        txtMaPhieuNew.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        btnTaoMa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTaoMa.setText("Tạo mã");
        btnTaoMa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoMaActionPerformed(evt);
            }
        });

        lblMatHang.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblMatHang.setText("Mặt hàng :");

        cboMatHang.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        cboMatHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMatHangActionPerformed(evt);
            }
        });

        btnChonMH.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnChonMH.setText("Chọn MH");
        btnChonMH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonMHActionPerformed(evt);
            }
        });

        tblDSMatHang.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tblDSMatHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã mặt hàng", "Tên mặt hàng", "Số lượng"
            }
        ));
        tblDSMatHang.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tblDSMatHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDSMatHangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDSMatHang);

        btnTaoPhieu.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnTaoPhieu.setText("Tạo phiếu");
        btnTaoPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoPhieuActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnDelete.setText("Xóa MH");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblSLNhap.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblSLNhap.setText("Số lượng :");

        txtSLNhap.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtSLNhap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSLNhapKeyPressed(evt);
            }
        });

        btnSuaSLuong.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        btnSuaSLuong.setText("Sửa");
        btnSuaSLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaSLuongActionPerformed(evt);
            }
        });

        lblNCC.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblNCC.setText("Nhà cung cấp :");

        txtNCC.setEditable(false);
        txtNCC.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        javax.swing.GroupLayout pnlDanhSachNhapHangLayout = new javax.swing.GroupLayout(pnlDanhSachNhapHang);
        pnlDanhSachNhapHang.setLayout(pnlDanhSachNhapHangLayout);
        pnlDanhSachNhapHangLayout.setHorizontalGroup(
            pnlDanhSachNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhSachNhapHangLayout.createSequentialGroup()
                .addGroup(pnlDanhSachNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDanhSachNhapHangLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(pnlDanhSachNhapHangLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(pnlDanhSachNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMaPhieu)
                            .addComponent(lblMatHang)
                            .addComponent(lblSLNhap)
                            .addComponent(lblNCC))
                        .addGap(30, 30, 30)
                        .addGroup(pnlDanhSachNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDanhSachNhapHangLayout.createSequentialGroup()
                                .addGroup(pnlDanhSachNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSLNhap)
                                    .addComponent(txtMaPhieuNew)
                                    .addComponent(cboMatHang, 0, 159, Short.MAX_VALUE))
                                .addGap(32, 32, 32)
                                .addGroup(pnlDanhSachNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnChonMH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSuaSLuong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnTaoMa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(txtNCC))
                        .addGap(11, 11, 11)))
                .addContainerGap())
            .addGroup(pnlDanhSachNhapHangLayout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(btnTaoPhieu)
                .addGap(56, 56, 56)
                .addComponent(btnDelete)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDanhSachNhapHangLayout.setVerticalGroup(
            pnlDanhSachNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhSachNhapHangLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pnlDanhSachNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaPhieu)
                    .addComponent(btnTaoMa, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaPhieuNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlDanhSachNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlDanhSachNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblMatHang)
                        .addComponent(cboMatHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnChonMH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlDanhSachNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSuaSLuong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addGroup(pnlDanhSachNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSLNhap)
                        .addComponent(txtSLNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnlDanhSachNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNCC)
                    .addComponent(txtNCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlDanhSachNhapHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTaoPhieu)
                    .addComponent(btnDelete))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDanhSachNhapHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDanhSachNhapHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        String maP = txtMaPhieuNew.getText();
        if(flagCreate == 0 && !maP.isEmpty())
            daoPN.deletePNH(maP);  
        
        Main_QL frm = new Main_QL();
        frm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void btnTaoMaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoMaActionPerformed
        if(flagCreateKey == 0)
        {
            String maP = createMaPhieu();
            txtMaPhieuNew.setText(maP);
        
            daoPN.insertPNH(maP, dtoStatic.empKey);
        }
        flagCreateKey = 1;
    }//GEN-LAST:event_btnTaoMaActionPerformed

    private void btnChonMHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonMHActionPerformed
        MatHang mh = (MatHang) cboMatHang.getSelectedItem();
        String maP = txtMaPhieuNew.getText();
        String sLuong = txtSLNhap.getText();
        if(maP.isEmpty())
        {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa tạo mã phiếu", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(sLuong.isEmpty())
        {
            JOptionPane.showMessageDialog(rootPane, "Bạn nhập số lượng cần nhập", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(checkMaMHExists(mh.getMaMH()))
        {
            JOptionPane.showMessageDialog(rootPane, "Mặt hàng này đã được yêu cầu nhập hàng", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        else
        {
            int row = dfTableModelMH.getRowCount();
            if(row > 0)
            {
                if(checkMaNCC(mh.getMaNCC(), maP) == false)
                {
                    JOptionPane.showMessageDialog(rootPane, "Mặt hàng này không cùng nhà cung cấp", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
                    return;
                }
                
                daoPN.insertCT_PN(maP, mh.getMaMH(), Integer.parseInt(sLuong));
                showMH(maP);
            }
            else
            {
                daoPN.insertCT_PN(maP, mh.getMaMH(), Integer.parseInt(sLuong));
                showMH(maP);
            }
        }
    }//GEN-LAST:event_btnChonMHActionPerformed

    private boolean checkMaMHExists(String maMH)
    {
        try {
            ResultSet rs = dao.selectData("SELECT MAMH, TTRANG FROM CT_PHIEUNHAP CT, PHIEUNHAPHANG P " +
                    "WHERE CT.MAPHIEUNHAP = P.MAPHIEUNHAP AND TTRANG = N'Đợi' AND MAMH = '" + maMH + "'");
            if(rs.next())
                return true;
        } catch (SQLException ex) {
            Logger.getLogger(QL_NhapHang.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }
    
    private boolean checkMaNCC(String maNCC, String maP)
    {
        try {
            ResultSet rs = dao.selectData("SELECT * FROM CT_PHIEUNHAP CT, MATHANG MH "
                                        + "WHERE CT.MAMH = MH.MAMH AND MANCC = '" + maNCC + "' AND MAPHIEUNHAP = '" + maP + "'");
            if(rs.next())
                return true;
        } catch (SQLException ex) {
            Logger.getLogger(QL_NhapHang.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }
    
    private void btnTaoPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoPhieuActionPerformed
        if(txtMaPhieuNew.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa tạo mã phiếu", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(tblDSMatHang.getRowCount() <= 0)
        {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa chọn mặt hàng cần nhập", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        flagCreate = 1;
        JOptionPane.showMessageDialog(rootPane, "Tạo phiếu nhập thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        Main_QL frm = new Main_QL();
        frm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnTaoPhieuActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int row = tblDSMatHang.getSelectedRow();
        if(row < 0)
        {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa chọn mặt hàng cần xóa", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String maP = txtMaPhieuNew.getText();
        int i = 0;
        while(i < tblDSMatHang.getSelectedRows().length)
        {
            String maMH = (String)tblDSMatHang.getValueAt(tblDSMatHang.getSelectedRows()[i], 0);
            daoPN.deleteCT_PN(maP, maMH);
            i++;
        }
        
        showMH(maP);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void cboMatHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMatHangActionPerformed
        MatHang mh = (MatHang) cboMatHang.getSelectedItem();
        if(!getNCCName(mh.getMaNCC()).isEmpty())
            txtNCC.setText(getNCCName(mh.getMaNCC()));
    }//GEN-LAST:event_cboMatHangActionPerformed

     private String getNCCName(String maNCC)
    {
        String tenNCC = "";
        try {
            ResultSet rs = dao.selectData("SELECT TENNCC FROM NHACUNGCAP WHERE MANCC = '" + maNCC + "'");
            if(rs.next())
                tenNCC = rs.getString("TENNCC");
        } catch (SQLException ex) {
            Logger.getLogger(QL_NhapHang.class.getName()).log(Level.SEVERE, null, ex);
        }
        return tenNCC;
    }
     
    private void txtSLNhapKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSLNhapKeyPressed
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || evt.getKeyChar() == '\b')
            txtSLNhap.setEditable(true);
        else 
        {
            txtSLNhap.setEditable(false);
            JOptionPane.showMessageDialog(rootPane, "Chỉ được nhập số", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            
            txtSLNhap.setEditable(true);
        }
    }//GEN-LAST:event_txtSLNhapKeyPressed

    private void tblDSMatHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDSMatHangMouseClicked
        int row = tblDSMatHang.getSelectedRow();
        if(row >= 0)
        {
            txtSLNhap.setText((String)tblDSMatHang.getValueAt(row, 2));
            String maMH = (String)tblDSMatHang.getValueAt(row, 0);
            String tenNCC = getNCCName(getNCCKey(maMH));
            txtNCC.setText(tenNCC);
        }
    }//GEN-LAST:event_tblDSMatHangMouseClicked

    private void btnSuaSLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaSLuongActionPerformed
        if(txtSLNhap.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa nhập số lượng", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        int row = tblDSMatHang.getSelectedRow();
        if(row < 0)
        {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa chọn mặt hàng cần thay đổi số lượng", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String maMH = (String) tblDSMatHang.getValueAt(row, 0);
        String maP = txtMaPhieuNew.getText();
        String sLuong = txtSLNhap.getText();
        daoPN.updateCT_PN(maP, maMH, Integer.parseInt(sLuong));
        showMH(maP);
    }//GEN-LAST:event_btnSuaSLuongActionPerformed

    private String getNCCKey(String maMH)
    {
        String maNCC = "";
        try {
            ResultSet rs = dao.selectData("SELECT MANCC FROM MATHANG WHERE MAMH = '" + maMH + "'");
            if(rs.next())
                maNCC = rs.getString("MANCC");
        } catch (SQLException ex) {
            Logger.getLogger(QL_NhapHang.class.getName()).log(Level.SEVERE, null, ex);
        }
        return maNCC;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QL_NhapHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QL_NhapHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QL_NhapHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QL_NhapHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QL_NhapHang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChonMH;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSuaSLuong;
    private javax.swing.JButton btnTaoMa;
    private javax.swing.JButton btnTaoPhieu;
    private javax.swing.JComboBox cboMatHang;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMaPhieu;
    private javax.swing.JLabel lblMatHang;
    private javax.swing.JLabel lblNCC;
    private javax.swing.JLabel lblSLNhap;
    private javax.swing.JPanel pnlDanhSachNhapHang;
    private javax.swing.JTable tblDSMatHang;
    private javax.swing.JTextField txtMaPhieuNew;
    private javax.swing.JTextField txtNCC;
    private javax.swing.JTextField txtSLNhap;
    // End of variables declaration//GEN-END:variables
}
