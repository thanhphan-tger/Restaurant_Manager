CREATE DATABASE QL_NhaHang
GO
USE QL_NhaHang
GO

CREATE TABLE DVT
(
	MADVT VARCHAR(10) NOT NULL,
	TENDVT NVARCHAR(50) NOT NULL,
	CONSTRAINT PK_DVT PRIMARY KEY (MADVT),
	CONSTRAINT UNI_TENDVT UNIQUE (TENDVT)
)
GO

CREATE TABLE BAN
(
	MABAN VARCHAR(10) NOT NULL,
	TENBAN NVARCHAR(50) NOT NULL,
	SOGHE INT DEFAULT 4,
	TINHTRANG NVARCHAR(50) DEFAULT N'Trống',
	CONSTRAINT PK_BAN PRIMARY KEY (MABAN)
)
GO

CREATE TABLE KHACHHANG
(
	MAKH VARCHAR(10) NOT NULL,
	TENKH NVARCHAR(50) NOT NULL,
	SDT VARCHAR(11),
	CONSTRAINT PK_KHACHHANG PRIMARY KEY (MAKH)
)
GO

CREATE TABLE CHUCVU
(
	MACV VARCHAR(10) NOT NULL,
	TENCV NVARCHAR(50) NOT NULL,
	CONSTRAINT PK_CHUCVU PRIMARY KEY (MACV),
	CONSTRAINT UNI_CHUCVU UNIQUE (TENCV)
)
GO

CREATE TABLE NHANVIEN
(
	MANV VARCHAR(10) NOT NULL,
	TENNV NVARCHAR(50) NOT NULL,
	SDT VARCHAR(11) NOT NULL,
	MACV VARCHAR(10) NOT NULL,
	CONSTRAINT PK_NHANVIEN PRIMARY KEY (MANV),
	CONSTRAINT FK_NHANVIEN FOREIGN KEY (MACV) REFERENCES CHUCVU(MACV)
)
GO

CREATE TABLE HOADON
(
	MAHD VARCHAR(10) NOT NULL,
	MANV VARCHAR(10) NOT NULL,
	MAKH VARCHAR(10) NOT NULL,
	NGAYLAP DATETIME DEFAULT GETDATE(),
	TONGTIEN FLOAT DEFAULT 0,
	TTRANG INT DEFAULT 0,
	CONSTRAINT PK_HOADON PRIMARY KEY (MAHD),
	CONSTRAINT FK_HOADON_NHANVIEN FOREIGN KEY (MANV) REFERENCES NHANVIEN(MANV),
	CONSTRAINT FK_HOADON_KHACHHANG FOREIGN KEY (MAKH) REFERENCES KHACHHANG(MAKH)
)
GO

CREATE TABLE DANHMUCHANG
(
	MADM VARCHAR(10) NOT NULL,
	TENDM NVARCHAR(50) NOT NULL,
	CONSTRAINT PK_DANHMUCHANG PRIMARY KEY (MADM),
	CONSTRAINT UNI_TENDM UNIQUE (TENDM)
)
GO

CREATE TABLE NHACUNGCAP
(
	MANCC VARCHAR(10) NOT NULL,
	TENNCC NVARCHAR(50) NOT NULL,
	DCHI NVARCHAR(200),
	SDT VARCHAR(11),
	CONSTRAINT PK_NHACUNGCAP PRIMARY KEY (MANCC),
	CONSTRAINT UNI_TENNCC UNIQUE (TENNCC)
)
GO

CREATE TABLE MATHANG
(
	MAMH VARCHAR(10) NOT NULL,
	TENMH NVARCHAR(50) NOT NULL,
	GIAMH FLOAT DEFAULT 0,
	SOLUONG INT DEFAULT 0,
	MADM VARCHAR(10) NOT NULL,
	MADVT VARCHAR(10) NOT NULL,
	MANCC VARCHAR(10),
	CONSTRAINT PK_MATHANG PRIMARY KEY (MAMH),
	CONSTRAINT FK_MATHANG_DANHMUCHANG FOREIGN KEY (MADM) REFERENCES DANHMUCHANG(MADM),
	CONSTRAINT FK_MATHANG_DVT FOREIGN KEY (MADVT) REFERENCES DVT(MADVT),
	CONSTRAINT FK_MATHANG_NHACUNGCAP FOREIGN KEY (MANCC) REFERENCES NHACUNGCAP(MANCC)
)
GO

CREATE TABLE CTHD_MH
(
	MAMH VARCHAR(10) NOT NULL,
	MAHD VARCHAR(10) NOT NULL,
	SLUONG INT DEFAULT 0, 
	TTIEN FLOAT DEFAULT 0,
	CONSTRAINT PK_CTHD_MH PRIMARY KEY (MAMH, MAHD),
	CONSTRAINT FK_CTHD_MH_MATHANG FOREIGN KEY (MAMH) REFERENCES MATHANG(MAMH),
	CONSTRAINT FK_CTHD_MH_HOADON FOREIGN KEY (MAHD) REFERENCES HOADON(MAHD)
)
GO

CREATE TABLE CTHD_BAN
(
	MAHD VARCHAR(10) NOT NULL,
	MABAN VARCHAR(10) NOT NULL,
	CONSTRAINT PK_CTHD_BAN PRIMARY KEY (MAHD, MABAN),
	CONSTRAINT FK_CTHD_BAN_HOADON FOREIGN KEY (MAHD) REFERENCES HOADON(MAHD),
	CONSTRAINT FK_CTHD_BAN_BAN FOREIGN KEY (MABAN) REFERENCES BAN(MABAN)
)
GO

CREATE TABLE PHIEUNHAPHANG
(
	MAPHIEUNHAP VARCHAR(10) NOT NULL,
	MANV VARCHAR(10) NOT NULL,
	NGAYTAO DATETIME,
	TTRANG NVARCHAR(50) DEFAULT N'Đợi'
	CONSTRAINT PK_PHIEUNHAPHANG PRIMARY KEY (MAPHIEUNHAP),
	CONSTRAINT FK_PHIEUNHAPHANG_NHANVIEN FOREIGN KEY (MANV) REFERENCES NHANVIEN(MANV)
)
GO

CREATE TABLE CT_PHIEUNHAP
(
	MAMH VARCHAR(10) NOT NULL,
	MAPHIEUNHAP VARCHAR(10) NOT NULL,
	SLUONG INT DEFAULT 0, 
	NGAYNHAP DATETIME,
	CONSTRAINT PK_CT_PHIEUNHAP PRIMARY KEY (MAMH, MAPHIEUNHAP),
	CONSTRAINT FK_CT_PHIEUNHAP_PHIEUNHAPHANG FOREIGN KEY (MAPHIEUNHAP) REFERENCES PHIEUNHAPHANG(MAPHIEUNHAP),
	CONSTRAINT FK_CT_PHIEUNHAP_MATHANG FOREIGN KEY (MAMH) REFERENCES MATHANG(MAMH)
)
GO

CREATE TABLE PHIEUNHANHANG
(
	MAPHIEUNHAN VARCHAR(10) NOT NULL,
	MANV VARCHAR(10) NOT NULL,
	TONGTIEN FLOAT DEFAULT 0,
	MAPHIEUNHAP VARCHAR(10) NOT NULL,
	CONSTRAINT PK_PHIEUNHANHANG PRIMARY KEY (MAPHIEUNHAN),
	CONSTRAINT FK_PHIEUNHANHANG_NHANVIEN FOREIGN KEY (MANV) REFERENCES NHANVIEN(MANV),
	CONSTRAINT FK_PHIEUNHANHANG_PHIEUNHAPHANG FOREIGN KEY (MAPHIEUNHAP) REFERENCES PHIEUNHAPHANG(MAPHIEUNHAP)
)
GO

CREATE TABLE CT_PHIEUNHAN
(
	MAMH VARCHAR(10) NOT NULL,
	MAPHIEUNHAN VARCHAR(10) NOT NULL,
	SLUONG INT DEFAULT 0, 
	GIAMH FLOAT DEFAULT 0,
	NGAYNHAN DATETIME,
	CONSTRAINT PK_CT_PHIEUNHAN PRIMARY KEY (MAMH, MAPHIEUNHAN),
	CONSTRAINT FK_CT_PHIEUNHAN_PHIEUNHANHANG FOREIGN KEY (MAPHIEUNHAN) REFERENCES PHIEUNHANHANG(MAPHIEUNHAN),
	CONSTRAINT FK_CT_PHIEUNHAN_MATHANG FOREIGN KEY (MAMH) REFERENCES MATHANG(MAMH)
)
GO

INSERT INTO DVT
VALUES
('DVT01', N'Chai'),
('DVT03', N'Cái'),
('DVT04', N'Kg'),
('DVT05', N'Bịt'),
('DVT07', N'Lon'),
('DVT08', N'Phần')

INSERT INTO BAN
VALUES
('B01', N'Bàn 1', 4, N'Trống'),
('B02', N'Bàn 2', 4, N'Trống'),
('B03', N'Bàn 3', 4, N'Trống'),
('B04', N'Bàn 4', 4, N'Trống'),
('B05', N'Bàn 5', 6, N'Trống'),
('B06', N'Bàn 6', 6, N'Trống'),
('B07', N'Bàn 7', 6, N'Trống'),
('B08', N'Bàn 8', 6, N'Trống'),
('B09', N'Bàn 9', 10, N'Trống'),
('B10', N'Bàn 10', 10, N'Trống'),
('B11', N'Bàn 11', 10, N'Trống'),
('B12', N'Bàn 12', 10, N'Trống'),
('B13', N'Bàn 13', 12, N'Trống'),
('B14', N'Bàn 14', 12, N'Trống'),
('B15', N'Bàn 15', 12, N'Trống'),
('B16', N'Bàn 16', 12, N'Trống')

INSERT INTO DANHMUCHANG
VALUES
('DM01', N'Khai vị'),
('DM02', N'Tráng miệng'),
('DM03', N'Chiên'),
('DM04', N'xào'),
('DM05', N'Lẩu'),
('DM06', N'Nướng'),
('DM07', N'Súp'),
('DM08', N'Vang'),
('DM09', N'Bia'),
('DM10', N'Nước giải khát')

INSERT INTO NHACUNGCAP
VALUES
('NCC01', N'Đại lý ABC', N'Một nơi nào đó ở TPHCM', '0123456789'),
('NCC02', N'Công ty rượu', N'Một nơi nào đó ở Đà Lạt', '0987654321')

INSERT INTO KHACHHANG
VALUES
('KH00001', N'Phan Trường Thạnh', '0345678987'),
('KH00002', N'Nguyễn Thanh Long', '0389432737'),
('KH00003', N'Nguyễn Thái Bảo', '0748935864'), 
('KH00004', N'Trần Lê Anh Tuấn', '0448384546'),
('KH00005', N'Nguyễn Thị Nhỏ', '0374698237'),
('KH00006', N'Võ Thị Sáu', '0028409328'),
('KH00007', N'Nguyễn Văn Huệ', '0349829042')

INSERT INTO CHUCVU
VALUES
('CV01', N'Phục vụ'),
('CV02', N'Thu ngân'),
('CV03', N'Kho'),
('CV04', N'Bếp trưởng'),
('CV05', N'Phụ bếp'),
('CV06', N'Quản lý'),
('CV07', N'Bảo vệ')

INSERT INTO NHANVIEN
VALUES
('NV0001', N'Nguyễn Thanh Long', '2001206902', 'CV06'),
('NV0002', N'Phan Trường Thạnh', '2001207034', 'CV06'),
('NV0003', N'Nguyễn Thái Bảo', '2001206918', 'CV06'),
('NV0004', N'Trần Kim Phụng', '2001206903', 'CV02'),
('NV0005', N'Trần Lê Anh Tuấn', '2001206811', 'CV03'),
('NV0006', N'Nguyễn Trường Thọ', '2001206831', 'CV01'),
('NV0007', N'Đậu Quang Ánh', '2001206810', 'CV01'),
('NV0008', N'Nguyễn Thế Anh', '2001206801', 'CV04'),
('NV0009', N'Tô Ánh Nguyệt', '2001206931', 'CV05'),
('NV0010', N'Nguyễn Thế Bình', '2001206910', 'CV07')

INSERT INTO MATHANG
VALUES
('M01', N'Đồ nguội', 50000, 1, 'DM01', 'DVT08', NULL),
('M02', N'Rau câu', 50000, 1, 'DM02', 'DVT08', NULL),
('M03', N'Pubding', 50000, 1, 'DM02', 'DVT08', NULL),
('M04', N'Khoai tây chiên', 40000, 1, 'DM03', 'DVT08', NULL),
('M05', N'Vũ nữ chân dài', 120000, 1, 'DM03', 'DVT08', NULL),
('M06', N'Bòa xào hành', 120000, 1, 'DM04', 'DVT08', NULL),
('M07', N'Mực xào xa tế', 120000, 1, 'DM04', 'DVT08', NULL),
('M08', N'Lẩu Thái', 120000, 1, 'DM05', 'DVT08', NULL),
('M09', N'Lẩu nắm', 120000, 1, 'DM05', 'DVT08', NULL),
('M10', N'Bò nướng lá ngón', 100000, 1, 'DM06', 'DVT08', NULL),
('M11', N'Súp cua King', 100000, 1, 'DM07', 'DVT08', NULL),
('M12', N'Van Đà Lạt', 500000, 120, 'DM08', 'DVT01', 'NCC02'),
('M13', N'Saigon', 18000, 120, 'DM09', 'DVT07', 'NCC01'),
('M14', N'Tiger', 25000, 120, 'DM09', 'DVT07', 'NCC01'),
('M15', N'Nước suối', 10000, 120, 'DM10', 'DVT01', 'NCC01')
GO

--*********************************************************************--
--*                         TABLE KHACHHANG                           *--
--*********************************************************************--

CREATE PROC sp_InsertKH @maKH VARCHAR(10), @tenKH NVARCHAR(50), @SDT VARCHAR(11)
AS
	BEGIN
		INSERT INTO KHACHHANG
		VALUES
		(@maKH, @tenKH, @SDT)
	END
GO

CREATE PROC sp_UpdateKH @maKH VARCHAR(10), @tenKH NVARCHAR(50), @SDT VARCHAR(11)
AS
	BEGIN
		UPDATE KHACHHANG
		SET TENKH = @tenKH, SDT = @SDT
		WHERE MAKH = @maKH
	END
GO

CREATE PROC sp_DeleteKH @maKH VARCHAR(10)
AS 
	BEGIN
		DELETE KHACHHANG
		WHERE MAKH = @maKH
	END
GO

CREATE PROC sp_FindKH @INFO NVARCHAR(100)
AS
	BEGIN
		SELECT * FROM KHACHHANG WHERE SDT LIKE '%'+@INFO+'%' OR MAKH LIKE '%'+@INFO+'%' OR TENKH LIKE N'%'+@INFO+'%'
	END
GO

CREATE PROC sp_SelectKH 
AS
	BEGIN
		SELECT * FROM KHACHHANG
	END
GO

CREATE PROC sp_SelectLastMaKH
AS
	BEGIN
		SELECT TOP 1(SUBSTRING(MAKH,3,5)) FROM KHACHHANG ORDER BY MAKH DESC
	END
GO

CREATE PROC sp_SelectKHByNumber @SDT VARCHAR(11), @MAKH VARCHAR(10)
AS
	BEGIN
		SELECT * FROM KHACHHANG WHERE SDT = @SDT AND MAKH != @MAKH
	END
GO

CREATE PROC sp_SelectKHByMaKH @MAKH VARCHAR(10)
AS
	BEGIN
		SELECT * FROM KHACHHANG WHERE MAKH = @MAKH
	END
GO

--*********************************************************************--
--*                           TABLE HOADON                            *--
--*********************************************************************--

CREATE PROC sp_InsertHD @maHD VARCHAR(10), @maNV VARCHAR(10), @maKH VARCHAR(10), @maBAN VARCHAR(10)
AS
	BEGIN
		IF EXISTS (SELECT * FROM HOADON WHERE MAHD = @maHD)
			BEGIN
				EXEC sp_InsertCTHD_BAN @maHD, @maBAN
			END
		ELSE
			BEGIN
				INSERT INTO HOADON (MAHD, MANV, MAKH)
				VALUES
				(@maHD, @maNV, @maKH)

				EXEC sp_InsertCTHD_BAN @maHD, @maBAN
			END
	END
GO

CREATE PROC sp_UpdateHD @maHD VARCHAR(10), @tongTien FLOAT
AS
	BEGIN
		UPDATE HOADON
		SET TONGTIEN = @tongTien, TTRANG = 1
		WHERE MAHD = @maHD
	END
GO

CREATE TRIGGER trg_UpdateStatusForTable ON HOADON
FOR UPDATE
AS
	BEGIN
		DECLARE @maHD VARCHAR(10), @maBan VARCHAR(10)
		IF (SELECT COUNT(*) FROM inserted) != 0
		BEGIN
			SELECT @maHD = MAHD FROM inserted

			DECLARE cs_Ban CURSOR DYNAMIC
			FOR SELECT MABAN FROM CTHD_BAN WHERE MAHD = @maHD

			OPEN cs_Ban
			WHILE (1=1)
			BEGIN
				FETCH NEXT FROM cs_Ban INTO @maBan
				IF (@@FETCH_STATUS = 0)
				BEGIN
					UPDATE BAN
					SET TINHTRANG = N'Trống'
					WHERE MABAN = @maBan
				END
				ELSE
					BREAK
			END

			CLOSE cs_Ban
			DEALLOCATE cs_Ban
		END
	END
GO

CREATE PROC sp_FindHD @INFO NVARCHAR(100)
AS
	BEGIN
		SELECT MAHD,HOADON.MANV,KHACHHANG.MAKH,CONVERT(VARCHAR, NGAYLAP, 29) AS DATE,TONGTIEN,TTRANG
		FROM HOADON,NHANVIEN,KHACHHANG
		WHERE (HOADON.MANV=NHANVIEN.MANV AND HOADON.MAKH=KHACHHANG.MAKH) AND(MAHD LIKE '%'+@INFO+'%' OR NHANVIEN.MANV LIKE '%'+@INFO+'%' OR KHACHHANG.MAKH LIKE '%'+@INFO+'%' OR TENNV LIKE N'%'+@INFO+'%' OR TENKH LIKE N'%'+@INFO+'%')
	END
GO

CREATE PROC sp_GetGrandTotal
AS
	BEGIN
		SELECT SUM(TONGTIEN) FROM HOADON WHERE TTRANG=1;
	END
GO

CREATE PROC sp_SelectAllHD
AS
	BEGIN
		SELECT MAHD,MANV,MAKH,CONVERT(VARCHAR, NGAYLAP, 29) AS DATE,TONGTIEN,TTRANG FROM HOADON
	END
GO

CREATE PROC sp_SelectHoaDonByMaHD @maHD VARCHAR(10)
AS
	BEGIN
		SELECT BAN.TENBAN,TENNV,TENKH 
		FROM KHACHHANG, NHANVIEN,HOADON,BAN,CTHD_BAN 
		WHERE HOADON.MAHD=@maHD AND KHACHHANG.MAKH=HOADON.MAKH AND HOADON.MAHD=CTHD_BAN.MAHD AND CTHD_BAN.MABAN=BAN.MABAN AND HOADON.MANV=NHANVIEN.MANV
	END
GO

CREATE PROC sp_SelectMHByMaHD @maHD VARCHAR(10)
AS
	BEGIN
		SELECT MATHANG.MAMH,MATHANG.TENMH,CTHD_MH.SLUONG,DVT.TENDVT,MATHANG.GIAMH,CTHD_MH.TTIEN 
		FROM DVT,HOADON,MATHANG,CTHD_MH 
		WHERE HOADON.MAHD=@maHD AND HOADON.MAHD=CTHD_MH.MAHD AND MATHANG.MAMH=CTHD_MH.MAMH AND DVT.MADVT=MATHANG.MADVT
	END
GO

--*********************************************************************--
--*                           TABLE CTHD_BAN                          *--
--*********************************************************************--

CREATE PROC sp_InsertCTHD_BAN @maHD VARCHAR(10), @maBAN VARCHAR(10)
AS
	BEGIN
		INSERT INTO CTHD_BAN
		VALUES
		(@maHD, @maBAN)
	END
GO

CREATE PROC sp_DeleteCTHD_BAN @maHD VARCHAR(10), @maBAN VARCHAR(10)
AS
	BEGIN
		DELETE CTHD_BAN
		WHERE MABAN = @maBAN AND MAHD = @maHD
	END
GO

CREATE PROC sp_UpdateCTHD_BAN @maHD VARCHAR(10), @maBanOld VARCHAR(10), @maBanNew VARCHAR(10)
AS
	BEGIN
		UPDATE CTHD_BAN
		SET MABAN = @maBanNew
		WHERE MAHD = @maHD AND MABAN = @maBanOld
	END
GO

CREATE TRIGGER trg_SetStatusForBan ON CTHD_BAN
FOR INSERT, DELETE, UPDATE
AS
	BEGIN
		DECLARE @maBan VARCHAR(10)
		IF (SELECT COUNT(*) FROM inserted) != 0
		BEGIN
			SELECT @maBan = MABAN FROM inserted
			UPDATE BAN
			SET TINHTRANG = N'Đã đặt'
			WHERE MABAN = @maBan
		END
		IF (SELECT COUNT(*) FROM deleted) != 0
		BEGIN
			SELECT @maBan = MABAN FROM deleted
			UPDATE BAN
			SET TINHTRANG = N'Trống'
			WHERE MABAN = @maBan
		END
	END
GO

--*********************************************************************--
--*                           TABLE CTHD_MH                           *--
--*********************************************************************--

CREATE PROC sp_InsertCTHD_MH @maMH VARCHAR(10), @maHD VARCHAR(10), @sLuong INT
AS
	BEGIN
		IF EXISTS (SELECT * FROM CTHD_MH WHERE MAMH = @maMH AND MAHD = @maHD)
		BEGIN
			DECLARE @action VARCHAR(10) = 'add'
			EXEC sp_UpdateCTHD_MH @maMH, @maHD, @sLuong, @action
		END
		ELSE
		BEGIN
			INSERT INTO CTHD_MH (MAMH, MAHD, SLUONG)
			VALUES
			(@maMH, @maHD, @sLuong)
		END
	END
GO

CREATE PROC sp_UpdateCTHD_MH @maMH VARCHAR(10), @maHD VARCHAR(10), @sLuong INT, @action VARCHAR(10)
AS
	BEGIN
		IF (@action = 'add')
		BEGIN
			UPDATE CTHD_MH
			SET SLUONG = SLUONG + @sLuong
			WHERE MAMH = @maMH AND MAHD = @maHD
		END
		ELSE
		BEGIN
			UPDATE CTHD_MH
			SET SLUONG = @sLuong
			WHERE MAMH = @maMH AND MAHD = @maHD
		END
	END
GO

CREATE PROC sp_DeleteCTHD_MH @maMH VARCHAR(10), @maHD VARCHAR(10)
AS
	BEGIN
		DELETE CTHD_MH
		WHERE MAMH = @maMH AND MAHD = @maHD
	END
GO

CREATE TRIGGER trg_UpdatePriceForCTHD_MH ON CTHD_MH
FOR INSERT, UPDATE
AS
	BEGIN
		DECLARE @maMH VARCHAR(10), @maHD VARCHAR(10), @sLuong INT, @giaMH FLOAT
		IF (SELECT COUNT(*) FROM inserted) != 0
		BEGIN
			SELECT @maMH = MAMH, @maHD = MAHD, @sLuong = SLUONG FROM inserted
			SELECT @giaMH = GIAMH FROM MATHANG WHERE MAMH = @maMH

			UPDATE CTHD_MH
			SET TTIEN = @giaMH * @sLuong
			WHERE MAMH = @maMH AND MAHD = @maHD
		END
	END
GO

CREATE TRIGGER trg_UpdateSLuongMH ON CTHD_MH
FOR INSERT, UPDATE, DELETE
AS 
	BEGIN
		DECLARE @sLuongNew INT = 0, @sLuongOld INT = 0, @maMH VARCHAR(10)

		IF (SELECT COUNT(*) FROM inserted) != 0
		BEGIN
			SELECT @sLuongNew = SLUONG, @maMH = MAMH FROM inserted

			IF(SELECT COUNT(*) FROM deleted) != 0
			BEGIN
				SELECT @sLuongOld = SLUONG FROM deleted
			END

			IF EXISTS (SELECT * FROM MATHANG WHERE MAMH = @maMH AND MADM IN ('DM08', 'DM09', 'DM10'))
			BEGIN
				UPDATE MATHANG
				SET SOLUONG = (SOLUONG + @sLuongOld) - @sLuongNew
				WHERE MAMH = @maMH
			END
		END

		ELSE
		BEGIN
			IF(SELECT COUNT(*) FROM deleted) != 0
			BEGIN
				SELECT @sLuongOld = SLUONG, @maMH = MAMH FROM deleted

				IF EXISTS (SELECT * FROM MATHANG WHERE MAMH = @maMH AND MADM IN ('DM08', 'DM09', 'DM10'))
				BEGIN
					UPDATE MATHANG
					SET SOLUONG = (SOLUONG + @sLuongOld) - @sLuongNew
					WHERE MAMH = @maMH
				END
			END
		END
	END
GO

--*********************************************************************--
--*                        TABLE PHIEUNHAPHANG                        *--
--*********************************************************************--

CREATE PROC sp_InsertPNH @maP VARCHAR(10), @maNV VARCHAR(10)
AS
	BEGIN
		INSERT INTO PHIEUNHAPHANG(MAPHIEUNHAP, MANV, NGAYTAO)
		VALUES
		(@maP, @maNV, GETDATE())
	END
GO

CREATE PROC sp_DeletePNH @maP VARCHAR(10)
AS
	BEGIN
		IF EXISTS (SELECT * FROM PHIEUNHAPHANG WHERE MAPHIEUNHAP = @maP)
		BEGIN
			DELETE CT_PHIEUNHAP WHERE MAPHIEUNHAP = @maP
			DELETE PHIEUNHAPHANG WHERE MAPHIEUNHAP = @maP
		END
	END
GO

CREATE PROC sp_UpdatePNH @maP VARCHAR(10)
AS
	BEGIN
		IF EXISTS (SELECT * FROM PHIEUNHAPHANG WHERE MAPHIEUNHAP = @maP)
		BEGIN
			UPDATE PHIEUNHAPHANG
			SET TTRANG = N'Đã nhập'
			WHERE MAPHIEUNHAP = @maP
		END
	END
GO

--*********************************************************************--
--*                         TABLE CT_PHIEUNHAP                        *--
--*********************************************************************--

CREATE PROC sp_InsertCT_PN @maP VARCHAR(10), @maMH VARCHAR(10), @sLuong INT
AS
	BEGIN
		IF NOT EXISTS (SELECT * FROM CT_PHIEUNHAP WHERE MAPHIEUNHAP = @maP AND MAMH = @maMH)
		BEGIN
			INSERT INTO CT_PHIEUNHAP
			VALUES
			(@maMH, @maP, @sLuong, GETDATE())
		END
	END
GO

CREATE PROC sp_DeleteCT_PN @maP VARCHAR(10), @maMH VARCHAR(10)
AS
	BEGIN
		IF EXISTS (SELECT * FROM CT_PHIEUNHAP WHERE MAPHIEUNHAP = @maP AND MAMH = @maMH)
		BEGIN
			DELETE CT_PHIEUNHAP
			WHERE MAPHIEUNHAP = @maP AND MAMH = @maMH
		END
	END
GO

CREATE PROC sp_UpdateCT_PN @maP VARCHAR(10), @maMH VARCHAR(10), @sLuong INT
AS
	BEGIN
		IF EXISTS (SELECT * FROM CT_PHIEUNHAP WHERE MAPHIEUNHAP = @maP AND MAMH = @maMH)
		BEGIN
			UPDATE CT_PHIEUNHAP
			SET SLUONG = @sLuong
			WHERE MAPHIEUNHAP = @maP AND MAMH = @maMH
		END
	END
GO

--*********************************************************************--
--*                        TABLE PHIEUNHANHANG                        *--
--*********************************************************************--

CREATE PROC sp_InsertPNHAN @maPNhan VARCHAR(10), @maNV VARCHAR(10), @maPNhap VARCHAR(10)
AS
	BEGIN
		INSERT INTO PHIEUNHANHANG(MAPHIEUNHAN, MANV, MAPHIEUNHAP)
		VALUES
		(@maPNhan, @maNV, @maPNhap)
	END
GO

CREATE PROC sp_DeletePNHAN @maPNhan VARCHAR(10)
AS
	BEGIN
		IF EXISTS (SELECT * FROM CT_PHIEUNHAN WHERE MAPHIEUNHAN = @maPNhan)
		BEGIN
			DECLARE @maMH VARCHAR(10)
			DECLARE cs_CT_PNHAN CURSOR DYNAMIC
			FOR SELECT MAMH FROM CT_PHIEUNHAN WHERE MAPHIEUNHAN = @maPNhan

			OPEN cs_CT_PNHAN
			WHILE (1=1)
			BEGIN
				FETCH NEXT FROM cs_CT_PNHAN INTO @maMH
				IF (@@FETCH_STATUS = 0)
				BEGIN
					DELETE CT_PHIEUNHAN WHERE MAPHIEUNHAN = @maPNhan AND MAMH = @maMH
				END
				ELSE
					BREAK
			END

			CLOSE cs_CT_PNHAN
			DEALLOCATE cs_CT_PNHAN	
		END
		IF EXISTS (SELECT * FROM PHIEUNHANHANG WHERE MAPHIEUNHAN = @maPNhan)
		BEGIN
			DELETE PHIEUNHANHANG WHERE MAPHIEUNHAN = @maPNhan
		END
	END
GO

--*********************************************************************--
--*                         TABLE CT_PHIEUNHAN                        *--
--*********************************************************************--

CREATE PROC sp_InsertCT_PNHAN @maPNhan VARCHAR(10), @maMH VARCHAR(10), @sLuong INT, @gia FLOAT
AS
	BEGIN
		IF NOT EXISTS (SELECT * FROM CT_PHIEUNHAN WHERE MAPHIEUNHAN = @maPNhan AND MAMH = @maMH)
		BEGIN
			INSERT INTO CT_PHIEUNHAN
			VALUES
			(@maMH, @maPNhan, @sLuong, @gia, GETDATE())
		END
	END
GO

CREATE PROC sp_UpdateCT_PNHAN @maPNhan VARCHAR(10), @maMH VARCHAR(10), @sLuong INT, @gia FLOAT
AS
	BEGIN
		IF EXISTS (SELECT * FROM CT_PHIEUNHAP WHERE MAPHIEUNHAP = @maPNhan AND MAMH = @maMH)
		BEGIN
			UPDATE CT_PHIEUNHAN
			SET SLUONG = @sLuong, GIAMH = @gia
			WHERE MAPHIEUNHAN = @maPNhan AND MAMH = @maMH
		END
	END
GO

CREATE TRIGGER trg_UpdateTTienPNHAN ON CT_PHIEUNHAN
FOR INSERT, UPDATE, DELETE
AS
	BEGIN
		DECLARE @maP VARCHAR(10), @maMH VARCHAR(10), @sLuong INT, @gia FLOAT
		IF EXISTS (SELECT * FROM inserted)
		BEGIN
			SELECT @maP = MAPHIEUNHAN, @maMH = MAMH, @sLuong = SLUONG, @gia = GIAMH FROM inserted
			
			UPDATE PHIEUNHANHANG
			SET TONGTIEN += (@sLuong * @gia)
			WHERE MAPHIEUNHAN = @maP

			UPDATE MATHANG
			SET SOLUONG += @sLuong
			WHERE MAMH = @maMH
		END
		IF EXISTS (SELECT * FROM deleted)
		BEGIN
			SELECT @maP = MAPHIEUNHAN, @maMH = MAMH, @sLuong = SLUONG, @gia = GIAMH FROM deleted

			UPDATE PHIEUNHANHANG
			SET TONGTIEN -= (@sLuong * @gia)
			WHERE MAPHIEUNHAN = @maP

			UPDATE MATHANG
			SET SOLUONG -= @sLuong
			WHERE MAMH = @maMH
		END
	END
GO

--*********************************************************************--
--*                          TABLE NHANVIEN                           *-- NO COMMIT
--*********************************************************************--

CREATE PROC sp_FindNV @INFO NVARCHAR(100)
AS
	BEGIN
		IF EXISTS (SELECT * FROM CHUCVU WHERE TENCV LIKE N'%'+@INFO+'%')
		BEGIN
			SELECT MANV, TENNV, SDT, TENCV 
			FROM NHANVIEN, CHUCVU 
			WHERE NHANVIEN.MACV = CHUCVU.MACV AND NHANVIEN.MACV = (SELECT MACV FROM CHUCVU WHERE TENCV LIKE N'%'+@INFO+'%')
		END
		ELSE
		BEGIN
			SELECT MANV, TENNV, SDT, TENCV 
			FROM NHANVIEN, CHUCVU 
			WHERE NHANVIEN.MACV = CHUCVU.MACV AND (SDT LIKE '%'+@INFO+'%' OR MANV LIKE '%'+@INFO+'%' OR TENNV LIKE N'%'+@INFO+'%')
		END
	END
GO


CREATE PROC sp_SelectLastMaNV
AS
	BEGIN
		SELECT TOP 1(SUBSTRING(MANV,3,5)) FROM NHANVIEN ORDER BY MANV DESC
	END
GO

CREATE PROC sp_SelectNVByNumber @SDT VARCHAR(11), @MANV VARCHAR(10)
AS
	BEGIN
		SELECT * FROM NHANVIEN WHERE SDT = @SDT AND MANV != @MANV
	END
GO

CREATE PROC sp_SelectNVByMaNV @MANV VARCHAR(10)
AS
	BEGIN
		SELECT * FROM NHANVIEN WHERE MANV = @MANV
	END
GO

CREATE PROC sp_InsertNV @maNV VARCHAR(10), @tenNV NVARCHAR(50), @SDT VARCHAR(11), @maCV NVARCHAR(50)
AS
	BEGIN
		INSERT INTO NHANVIEN
		VALUES
		(@maNV, @tenNV, @SDT, @maCV)
	END
GO

CREATE PROC sp_SelectNV 
AS
	BEGIN
		Select MANV, TENNV, SDT, TENCV from NHANVIEN, CHUCVU WHERE NHANVIEN.MACV = CHUCVU.MACV
	END
GO

CREATE PROC sp_UpdateNV @maNV VARCHAR(10), @tenNV NVARCHAR(50), @SDT VARCHAR(11), @maCV NVARCHAR(50)
AS
	BEGIN
		UPDATE NHANVIEN
		SET TENNV = @tenNV, SDT = @SDT, MACV = @maCV
		WHERE MANV = @maNV
	END
GO

CREATE PROC sp_DeleteNV @maNV VARCHAR(10)
AS
	BEGIN
		DELETE NHANVIEN
		WHERE MANV = @maNV
	END
GO

--*********************************************************************--
--*                            TABLE BAN                              *-- NO COMMIT
--*********************************************************************--


--*********************************************************************--
--*                            TABLE DVT                              *-- NO COMMIT
--*********************************************************************--


--*********************************************************************--
--*                        TABLE DANHMUCHANG                          *-- NO COMMIT
--*********************************************************************--

--*********************************************************************--
--*                          TABLE MATHANG                            *-- NO COMMIT
--*********************************************************************--
